<%- include('partialsadmin/adminheader') %>
<%- include('partialsadmin/adminnav') %>
<%- include('partialsadmin/adminpageheader') %>

<div
    class="d-flex ms-4 me-4 justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h3 class="h3 text-primary">Category Management</h3>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal"
                data-bs-target="#createCategoryModal">
                + create category
            </button>
        </div>

    </div>
</div>
<!-- Modal for creating a category -->
<div class="modal fade" id="createCategoryModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Create Category</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form method="POST" action="/admin/category-management/newCategory" enctype="multipart/form-data" id="createCategoryForm">
                    <div class="mb-3">
                        <label for="name" class="form-label">Category Name:</label>
                        <input type="text" id="name" name="name" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Category Description:</label>
                        <textarea id="description" name="description" class="form-control" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="image" class="form-label">Category Image:</label>
                        <input type="file" id="image" name="image" accept="image/*" class="form-control" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Create Category</button>
                </form>
            </div>
        </div>
    </div>
</div>
  <div id="errorContainer" style="text-align: center; margin-top: 10px; padding: 10px;">
         <% if (categoryErr) { %>
         <p style="color: rgb(255, 14, 14);"><%= categoryErr %></p>
         <script>
            setTimeout(function () {
               var errorContainer = document.getElementById('errorContainer');
               if (errorContainer) {
                  errorContainer.style.display = 'none';
               }
            }, 5000);
         </script>
         <% } else { %>
         <p></p>
         <% } %>
      </div>
<table class="table align-middle mb-0  bg-white">
    <thead class="bg-light text-center">
        <tr>
            <th>S.No</th>
            <th>Image</th>
            <th>Category Name</th>
            <th>Description</th>
            <th colspan="2">Actions</th>

        </tr>
    </thead>
    <tbody class="text-center">
        <% categories.forEach((category, index) => { %>
        <tr>
            <td><%= index+1 %></td>
            <td>
                <div class="d-flex align-items-center">
                    <% if (category.image) { %>
                    <img src="../<%=category.image %>" alt="<%= category.name %> Image" style="width: 45px; height: 45px"
                        class="rounded-circle" />
                    <% } %>

            </td>
            <td>
                <div class="ms-3 ">
                    <p class="fw-bold mb-1"><%= category.name %></p>
                </div>
                </div>
            </td>
            <td>
                <p class="fw-normal mb-1"><%= category.description %></p>
            </td>
            <td>
                <button type="button" class="btn btn-primary" style="height: 40px; display: flex;"
                    data-bs-toggle="modal" data-bs-target="#editModal<%= category._id %>"
                    data-category-id="<%= category._id %>">
                    <i class="fa fa-edit"></i> Edit
                </button>

                <!-- Modal for editing category -->
                <div class="modal fade" id="editModal<%= category._id %>" tabindex="-1" role="dialog"
                    aria-labelledby="editModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="editModalLabel">Edit Category</h5>
                                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <!-- Edit category form -->
                                <form method="POST" action="category-management/edit-category/<%= category._id %>" enctype="multipart/form-data" id="editCategoryform">
                                    <div class="form-group mb-3">
                                        <label for="editName">Name:</label><br>
                                        <input type="text" class="form-control" id="editName" name="editName"
                                            value="<%= category.name %>" required>
                                    </div>

                                    <div class="form-group mb-3">
                                        <label for="editDescription">Description:</label>
                                        <br>
                                        <textarea class="form-control" id="editDescription" name="editDescription"
                                            required><%= category.description %></textarea>
                                    </div>

                                    <div class="form-group mb-3">
                                        <label for="editImage">Category Image:</label>
                                        <br>
                                        <input type="file" class="form-control" id="editImage" name="editImage"
                                            accept="image/*">
                                    </div>


                                    <!-- Add additional fields as needed -->
                                    <button type="submit" class="btn btn-primary">Save Changes</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
            <td>
                <button type="button" class="btn btn-danger" style="height: 40px; display: flex;"
                    onclick="deleteUser('<%= category._id %>')">
                    <i class="material-icons md-trash"></i> Delete
                </button>
            </td>
        </tr>
        <% }) %>
    </tbody>
</table>

<div class="pagination-area mt-30 mb-50">
    <nav aria-label="Page navigation example">
       <ul class="pagination justify-content-start">
          <% for( let i = 1; i <= totalPages; i++ ) { %>
          <% if (i === currentPage) { %>
          <li class="page-item active"><span class="page-link"><%= i %></span></li>
          <% } else if (i === currentPage-1 || i === currentPage + 1 || i===1 || i === totalPages) { %>
          <li class="page-item"><a class="page-link" href="?page=<%= i %>&search=<%= search %>"><%= i %></a></li>
          <% } else if (i === currentPage - 2 ||  i === currentPage + 2 ) { %>
          <li class="page-item"><span class="page-link dot">...</span></li>
          <% } %>
          <% } %>
       </ul>
    </nav>
 </div> 



<br>
<br>
<script>
    function deleteUser(categoryId) {
// Display a confirmation dialog using SweetAlert
Swal.fire({
title: 'Are you sure?',
text: 'Are you sure you want to delete this category?',
icon: 'warning',
showCancelButton: true,
confirmButtonColor: '#d33',
cancelButtonColor: '#3085d6',
confirmButtonText: 'Yes, delete it!'
}).then((result) => {
if (result.isConfirmed) {
fetch('category-management/delete-category/' + categoryId, {
method: 'DELETE'
}).then(response => {
if (response.ok) {
    // User was successfully deleted
    // Show success message using SweetAlert
    Swal.fire('Deleted!', 'Category has been deleted.', 'success')
        .then(() => {
            // Reload the page to update the list of categories
            window.location.reload();
        });
} else {
    // Handle error with SweetAlert
    Swal.fire('Error!', 'An error occurred while deleting the category.', 'error');
}
});
} else {
// Reload the page
window.location.reload();
}
});
}

</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
    console.log("Inside event listener")
    const form = document.getElementById("createCategoryForm");
    const Editform = document.getElementById("editCategoryform");
    form.addEventListener("submit", function (event) {
        let valid = true;

        // Validation for Category Name
        const categoryName = document.getElementById("name").value.trim();
        if (categoryName === "") {
            valid = false;
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please enter a Category Name',
            });
        }

        // Validation for Category Description
        const categoryDescription = document.getElementById("description").value.trim();
        if (categoryDescription === "") {
            valid = false;
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please enter a Category Description',
            });
        }

        // Validation for Category Image
        const imageInput = document.getElementById("image");
        const uploadedFile = imageInput.files[0];

        if (!uploadedFile) {
            valid = false;
            alert("Please upload an image");
        } else {
            const allowedFormats = ["image/jpeg", "image/png", "image/gif"];

            if (allowedFormats.indexOf(uploadedFile.type) === -1) {
                valid = false;
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Please upload a valid image file (JPEG, PNG, GIF)',
                });
            }
        }

        if (!valid) {
            event.preventDefault(); // Prevent form submission if validation fails
        }
    });
    Editform.addEventListener("submit", function (event) {
        event.preventDefault();
        let valid = true;

        // Validation for Category Name
        const categoryName = document.getElementById("editName").value.trim();
        if (categoryName === "") {
            valid = false;
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please enter a Category Name',
            });
        }

        // Validation for Category Description
        const categoryDescription = document.getElementById("editDescription").value.trim();
        if (categoryDescription === "") {
            valid = false;
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please enter a Category Description',
            });
        }

        // Validation for Category Image in Edit form (similar to create form)
        const editImageInput = document.getElementById("editImage");
        const uploadedEditFile = editImageInput.files[0];

        if (!uploadedEditFile) {
            valid = false;
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please upload an image',
            });
        } else {
            const allowedFormats = ["image/jpeg", "image/png", "image/gif"];

            if (allowedFormats.indexOf(uploadedEditFile.type) === -1) {
                valid = false;
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Please upload a valid image file (JPEG, PNG, GIF)',
                });
            }
        }

        if (valid) {
            editForm.submit(); // Submit the edit form if validation passes
        }
    });
});
</script>
<%- include('partialsadmin/adminfooter') %>